name: Debug GitHub Pages Artifact Contents

on:
  workflow_dispatch:
    inputs:
      artifact_name:
        description: 'Name of the artifact to inspect'
        required: true
        default: 'github-pages'

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.artifact_name }}
          path: artifact
      
      - name: Extract artifact
        run: |
          echo "=== Extracting artifact ==="
          # Create clean extraction directory
          mkdir -p extracted
          
          # Inspect artifact structure
          echo "Artifact structure:"
          find artifact -type f | sort
          
          # If artifact is a tar archive (GitHub Pages artifacts are usually tarballs)
          if [ -f artifact/*.tar ]; then
            echo "Extracting tar file..."
            tar -xf artifact/*.tar -C extracted
          else
            echo "No tar file found, copying files directly..."
            cp -R artifact/* extracted/
          fi
      
      - name: Analyze extracted contents
        run: |
          echo "=== ARTIFACT CONTENT ANALYSIS ==="
          
          echo "Directory structure:"
          find extracted -type f | sort
          
          echo "Total size:"
          du -sh extracted
          
          echo "=== LINK DETECTION ==="
          echo "Symlinks in artifact:"
          find extracted -type l -ls | tee symlinks.txt
          echo "Found $(wc -l < symlinks.txt) symlinks"
          
          echo "Hard links in artifact:"
          find extracted -type f -links +1 -ls | tee hardlinks.txt
          echo "Found $(wc -l < hardlinks.txt) hard links"
          
          echo "=== FILE TYPE ANALYSIS ==="
          echo "Analyzing file types..."
          find extracted -type f -exec file {} \; | sort | uniq -c | sort -nr
          
          echo "=== PERMISSION ANALYSIS ==="
          echo "Files without read permission:"
          find extracted -type f -not -perm -a=r | wc -l
          
          echo "Directories without read/execute permission:"
          find extracted -type d -not -perm -a=rx | wc -l
      
      - name: Create verification report
        run: |
          {
            echo "# GitHub Pages Artifact Verification Report"
            echo "Generated: $(date)"
            echo ""
            echo "## Artifact Information"
            echo "- Name: ${{ github.event.inputs.artifact_name }}"
            echo "- Size: $(du -sh extracted | cut -f1)"
            echo "- File count: $(find extracted -type f | wc -l)"
            echo ""
            echo "## Link Analysis"
            echo "- Symlinks found: $(wc -l < symlinks.txt)"
            echo "- Hard links found: $(wc -l < hardlinks.txt)"
            echo ""
            if [ "$(wc -l < symlinks.txt)" -gt 0 ]; then
              echo "### Symlinks"
              echo '```'
              cat symlinks.txt
              echo '```'
              echo ""
            fi
            if [ "$(wc -l < hardlinks.txt)" -gt 0 ]; then
              echo "### Hard links"
              echo '```'
              cat hardlinks.txt
              echo '```'
              echo ""
            fi
            echo "## Recommendations"
            if [ "$(wc -l < symlinks.txt)" -gt 0 ] || [ "$(wc -l < hardlinks.txt)" -gt 0 ]; then
              echo "- **Critical Issue**: Links found in artifact. GitHub Pages deployment may fail."
              echo "- Recommended solution: Use `cp -R --dereference` to copy files, or create files from scratch."
            else
              echo "- No links found in artifact. If deployment is failing, the issue is likely elsewhere."
            fi
          } > verification-report.md
          
          # Display the report
          cat verification-report.md
      
      - name: Upload verification report
        uses: actions/upload-artifact@v4
        with:
          name: verification-report
          path: verification-report.md